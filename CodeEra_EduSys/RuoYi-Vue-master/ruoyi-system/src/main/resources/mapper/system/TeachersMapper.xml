<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.TeachersMapper">
    
    <resultMap type="Teachers" id="TeachersResult">
        <result property="teacherId"    column="teacher_id"    />
        <result property="name"    column="name"    />
        <result property="contactNumber"    column="contact_number"    />
        <result property="specialization"    column="specialization"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectTeachersVo">
        select teacher_id, name, contact_number, specialization, create_by, create_time, update_by, update_time, remark from teachers
    </sql>

    <select id="selectTeachersList" parameterType="Teachers" resultMap="TeachersResult">
        <include refid="selectTeachersVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="contactNumber != null  and contactNumber != ''"> and contact_number = #{contactNumber}</if>
            <if test="specialization != null  and specialization != ''"> and specialization like concat('%', #{specialization}, '%')</if>
        </where>
    </select>
    
    <select id="selectTeachersByTeacherId" parameterType="Long" resultMap="TeachersResult">
        <include refid="selectTeachersVo"/>
        where teacher_id = #{teacherId}
    </select>

    <insert id="insertTeachers" parameterType="Teachers" useGeneratedKeys="true" keyProperty="teacherId">
        insert into teachers
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="contactNumber != null">contact_number,</if>
            <if test="specialization != null">specialization,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="contactNumber != null">#{contactNumber},</if>
            <if test="specialization != null">#{specialization},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateTeachers" parameterType="Teachers">
        update teachers
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="contactNumber != null">contact_number = #{contactNumber},</if>
            <if test="specialization != null">specialization = #{specialization},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where teacher_id = #{teacherId}
    </update>

    <delete id="deleteTeachersByTeacherId" parameterType="Long">
        delete from teachers where teacher_id = #{teacherId}
    </delete>

    <delete id="deleteTeachersByTeacherIds" parameterType="String">
        delete from teachers where teacher_id in 
        <foreach item="teacherId" collection="array" open="(" separator="," close=")">
            #{teacherId}
        </foreach>
    </delete>
</mapper>