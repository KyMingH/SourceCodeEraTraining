<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.ClassScheduleMapper">
    
    <resultMap type="ClassSchedule" id="ClassScheduleResult">
        <result property="scheduleId"    column="schedule_id"    />
        <result property="classId"    column="class_id"    />
        <result property="courseName"    column="course_name"    />
        <result property="courseTime"    column="course_time"    />
        <result property="teacherId"    column="teacher_id"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectClassScheduleVo">
        select schedule_id, class_id, course_name, course_time, teacher_id, create_by, create_time, update_by, update_time, remark from class_schedule
    </sql>

    <select id="selectClassScheduleList" parameterType="ClassSchedule" resultMap="ClassScheduleResult">
        <include refid="selectClassScheduleVo"/>
        <where>  
            <if test="courseName != null  and courseName != ''"> and course_name like concat('%', #{courseName}, '%')</if>
            <if test="params.beginCourseTime != null and params.beginCourseTime != '' and params.endCourseTime != null and params.endCourseTime != ''"> and course_time between #{params.beginCourseTime} and #{params.endCourseTime}</if>
        </where>
    </select>
    
    <select id="selectClassScheduleByScheduleId" parameterType="Long" resultMap="ClassScheduleResult">
        <include refid="selectClassScheduleVo"/>
        where schedule_id = #{scheduleId}
    </select>

    <insert id="insertClassSchedule" parameterType="ClassSchedule" useGeneratedKeys="true" keyProperty="scheduleId">
        insert into class_schedule
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="classId != null">class_id,</if>
            <if test="courseName != null">course_name,</if>
            <if test="courseTime != null">course_time,</if>
            <if test="teacherId != null">teacher_id,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="classId != null">#{classId},</if>
            <if test="courseName != null">#{courseName},</if>
            <if test="courseTime != null">#{courseTime},</if>
            <if test="teacherId != null">#{teacherId},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateClassSchedule" parameterType="ClassSchedule">
        update class_schedule
        <trim prefix="SET" suffixOverrides=",">
            <if test="classId != null">class_id = #{classId},</if>
            <if test="courseName != null">course_name = #{courseName},</if>
            <if test="courseTime != null">course_time = #{courseTime},</if>
            <if test="teacherId != null">teacher_id = #{teacherId},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where schedule_id = #{scheduleId}
    </update>

    <delete id="deleteClassScheduleByScheduleId" parameterType="Long">
        delete from class_schedule where schedule_id = #{scheduleId}
    </delete>

    <delete id="deleteClassScheduleByScheduleIds" parameterType="String">
        delete from class_schedule where schedule_id in 
        <foreach item="scheduleId" collection="array" open="(" separator="," close=")">
            #{scheduleId}
        </foreach>
    </delete>
</mapper>