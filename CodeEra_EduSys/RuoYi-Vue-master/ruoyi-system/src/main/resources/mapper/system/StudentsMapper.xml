<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.StudentsMapper">
    
    <resultMap type="Students" id="StudentsResult">
        <result property="studentId"    column="student_id"    />
        <result property="name"    column="name"    />
        <result property="gender"    column="gender"    />
        <result property="status"    column="status"    />
        <result property="birthDate"    column="birth_date"    />
        <result property="contactNumber"    column="contact_number"    />
        <result property="email"    column="email"    />
        <result property="emergencyContact"    column="emergency_contact"    />
        <result property="emergencyContactNumber"    column="emergency_contact_number"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectStudentsVo">
        select student_id, name, gender, status, birth_date, contact_number, email, emergency_contact, emergency_contact_number, create_by, create_time, update_by, update_time, remark from students
    </sql>

    <select id="selectStudentsList" parameterType="Students" resultMap="StudentsResult">
        <include refid="selectStudentsVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="gender != null  and gender != ''"> and gender = #{gender}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="params.beginBirthDate != null and params.beginBirthDate != '' and params.endBirthDate != null and params.endBirthDate != ''"> and birth_date between #{params.beginBirthDate} and #{params.endBirthDate}</if>
            <if test="contactNumber != null  and contactNumber != ''"> and contact_number = #{contactNumber}</if>
            <if test="email != null  and email != ''"> and email = #{email}</if>
            <if test="emergencyContact != null  and emergencyContact != ''"> and emergency_contact like concat('%', #{emergencyContact}, '%')</if>
            <if test="emergencyContactNumber != null  and emergencyContactNumber != ''"> and emergency_contact_number = #{emergencyContactNumber}</if>
        </where>
    </select>
    
    <select id="selectStudentsByStudentId" parameterType="Long" resultMap="StudentsResult">
        <include refid="selectStudentsVo"/>
        where student_id = #{studentId}
    </select>

    <insert id="insertStudents" parameterType="Students" useGeneratedKeys="true" keyProperty="studentId">
        insert into students
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="gender != null">gender,</if>
            <if test="status != null">status,</if>
            <if test="birthDate != null">birth_date,</if>
            <if test="contactNumber != null">contact_number,</if>
            <if test="email != null">email,</if>
            <if test="emergencyContact != null">emergency_contact,</if>
            <if test="emergencyContactNumber != null">emergency_contact_number,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="gender != null">#{gender},</if>
            <if test="status != null">#{status},</if>
            <if test="birthDate != null">#{birthDate},</if>
            <if test="contactNumber != null">#{contactNumber},</if>
            <if test="email != null">#{email},</if>
            <if test="emergencyContact != null">#{emergencyContact},</if>
            <if test="emergencyContactNumber != null">#{emergencyContactNumber},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateStudents" parameterType="Students">
        update students
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="status != null">status = #{status},</if>
            <if test="birthDate != null">birth_date = #{birthDate},</if>
            <if test="contactNumber != null">contact_number = #{contactNumber},</if>
            <if test="email != null">email = #{email},</if>
            <if test="emergencyContact != null">emergency_contact = #{emergencyContact},</if>
            <if test="emergencyContactNumber != null">emergency_contact_number = #{emergencyContactNumber},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where student_id = #{studentId}
    </update>

    <delete id="deleteStudentsByStudentId" parameterType="Long">
        delete from students where student_id = #{studentId}
    </delete>

    <delete id="deleteStudentsByStudentIds" parameterType="String">
        delete from students where student_id in 
        <foreach item="studentId" collection="array" open="(" separator="," close=")">
            #{studentId}
        </foreach>
    </delete>
</mapper>